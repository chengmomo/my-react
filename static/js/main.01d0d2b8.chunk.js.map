{"version":3,"sources":["pages/Layout/SiderNav/index.js","pages/Layout/HeaderBar/index.js","pages/Layout/index.js","pages/Login/index.js","utils/LoadableComponent.js","utils/Session.js","App.js","serviceWorker.js","store/index.js","store/appStore.js","store/home.js","index.js"],"names":["menus","title","icon","key","subs","SiderNav","withRouter","props","onOpenChange","openKeys","console","log","length","latestOpenKey","includes","setState","renderSubMenu","SubMenu","type","map","item","renderMenuItem","Item","to","state","selectedKeys","pathname","this","location","rank","split","substr","lastIndexOf","slice","join","nextProps","value","className","onClick","theme","style","borderRight","mode","inlineCollapsed","collapsed","React","Component","HeaderBar","inject","toggle","onToggle","logout","appStore","toggleLogin","history","push","menu","ItemGroup","isLogin","span","defaultSelectedKeys","lineHeight","borderBottom","overlay","Header","Content","Sider","Footer","Home","trigger","collapsible","height","background","padding","children","textAlign","target","href","Login","create","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","username","getFieldDecorator","onSubmit","rules","required","message","prefix","color","placeholder","hasFeedback","htmlType","LoadableComponent","component","Loadable","loader","loading","LOGIN_COOKIE_NAME","isAuthenticated","name","start","end","document","cookie","indexOf","unescape","substring","_getCookie","authenticateSuccess","token","_setCookie","expire","date","Date","setDate","getDate","escape","toGMTString","TableDemo","FormDemo","App","path","render","exact","from","Boolean","window","hostname","match","store","flag","info","loginUser","observable","action","home","list","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.01d0d2b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\nconst menus = [\r\n  {\r\n    title: '首页',\r\n    icon: 'home',\r\n    key: '/home'\r\n  },\r\n  {\r\n    title: 'Ant 基本组件',\r\n    icon: 'user',\r\n    key: '/home/ant',\r\n    subs: [\r\n      {title: 'Form', icon: '', key: '/home/ant/form'},\r\n      {title: 'Table', icon: '', key: '/home/ant/table'}\r\n    ]\r\n  },\r\n  {\r\n    title: 'Nav2',\r\n    icon: 'mail',\r\n    key: '/home/nav2',\r\n    subs: [\r\n      {title: 'option3', icon: '', key: '/home/nav2/option3'},\r\n      {\r\n        title: '图表',\r\n        icon: 'bar-chart',\r\n        key: '/home/nav2/submenu',\r\n        subs: [\r\n          {title: 'option4', icon: '', key: '/home/nav2/submenu/option4'},\r\n          {title: 'option5', icon: '', key: '/home/nav2/submenu/option5'},\r\n          {title: 'option6', icon: '', key: '/home/nav2/submenu/option6'}\r\n        ]\r\n      }]\r\n  }]\r\n\r\n//withRouter一定要写在前面，不然路由变化不会反映到props中去\r\n@withRouter\r\nclass SiderNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKeys: [],\r\n      openKeys: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 防止页面刷新侧边栏又初始化了\r\n    const pathname = this.props.location.pathname\r\n    //获取当前所在的目录层级\r\n    const rank = pathname.split('/')\r\n    console.log(rank)\r\n    switch (rank.length) {\r\n      case 2 :  //一级目录\r\n        this.setState({\r\n          selectedKeys: [pathname]\r\n        })\r\n        break;\r\n      case 4 : //二级目录\r\n        this.setState({\r\n          selectedKeys: [pathname],\r\n          openKeys: [pathname.substr(0, pathname.lastIndexOf('/'))]\r\n        })\r\n        break;\r\n      case 5 : //三级目录，要展开两个subMenu\r\n        this.setState({\r\n          selectedKeys: [pathname],\r\n          openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //当点击面包屑导航时，侧边栏要同步响应\r\n    const {value: oldValue} = this.props;\r\n    const pathname = nextProps.location.pathname\r\n    if (this.props.location.pathname !== pathname) {\r\n      this.setState({\r\n        selectedKeys: [pathname],\r\n      })\r\n    }\r\n  }\r\n\r\n  onOpenChange = (openKeys) => {\r\n    console.log(openKeys)\r\n    if (openKeys.length === 0 || openKeys.length === 1) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n      return\r\n    }\r\n\r\n    const latestOpenKey = openKeys[openKeys.length - 1]\r\n    //判断最新展开的菜单是不是父级菜单，若是父级菜单就只展开一个，若是子级菜单就展开父级菜单和当前子菜单\r\n    //因为我的子菜单的key包含了父级菜单，所以不用像官网的例子单独定义父级菜单数组，然后比较当前菜单在不在父级菜单数组里面。\r\n    //只适用于3级菜单\r\n    if (latestOpenKey.includes(openKeys[0])) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n    } else {\r\n      this.setState({\r\n        openKeys: [latestOpenKey]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {openKeys, selectedKeys} = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"logo\"/>\r\n        <Menu\r\n          onOpenChange={this.onOpenChange}\r\n          onClick={({key}) => this.setState({selectedKeys: [key]})}\r\n          theme=\"dark\"\r\n          selectedKeys={selectedKeys}\r\n          openKeys={openKeys}\r\n          style={{borderRight: 0}}\r\n          mode=\"inline\"\r\n          inlineCollapsed={this.props.collapsed}\r\n        >\r\n          {\r\n            menus && menus.map(item => {\r\n              return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\r\n            })\r\n          }\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSubMenu = ({key, icon, title, subs}) => {\r\n    return (\r\n      <Menu.SubMenu key={key} title={<span> {icon && <Icon type={icon}/>}<span>{title}</span></span>}>\r\n        {\r\n          subs && subs.map(item => {\r\n            return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\r\n          })\r\n        }\r\n      </Menu.SubMenu>\r\n    )\r\n  }\r\n\r\n  renderMenuItem = ({key, icon, title,}) => {\r\n    return (\r\n      <Menu.Item key={key}>\r\n        <Link to={key}>\r\n          {icon && <Icon type={icon}/>}\r\n          <span>{title}</span>\r\n        </Link>\r\n      </Menu.Item>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SiderNav\r\n","import React from 'react';\r\nimport {Icon, Menu, Avatar, Row, Col, Dropdown} from 'antd';\r\nimport {inject} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../style.css'\r\n\r\n@withRouter @inject('appStore')\r\nclass HeaderBar extends React.Component {\r\n  toggle = () => {\r\n    this.props.onToggle()\r\n  }\r\n  logout = () => {\r\n    this.props.appStore.toggleLogin(false)\r\n    this.props.history.push(this.props.location.pathname)\r\n  }\r\n\r\n  render() {\r\n    const {collapsed, appStore} = this.props\r\n    const menu = (\r\n      <Menu className='menu'>\r\n        <Menu.ItemGroup title='用户中心' className='menu-group'>\r\n          <Menu.Item>你好</Menu.Item>\r\n          <Menu.Item>个人信息</Menu.Item>\r\n          <Menu.Item><span onClick={this.logout}>退出登录</span></Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title='设置中心' className='menu-group'>\r\n          <Menu.Item>设置</Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </Menu>\r\n    )\r\n    return (\r\n      <div>\r\n        <Icon\r\n          className=\"trigger\"\r\n          type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n          onClick={this.toggle}\r\n        />\r\n        <span>isLogin-{appStore.isLogin ? 'TRUE' : 'FALSE'}</span>\r\n        <Row className=\"header-right\">\r\n          <Col span={20}>\r\n            <Menu className=\"top-menu\"\r\n                  mode=\"horizontal\"\r\n                  defaultSelectedKeys={['2']}\r\n                  style={{lineHeight: '62px', borderBottom: 0}}\r\n            >\r\n              <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n              <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n              <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n            </Menu>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Dropdown overlay={menu}>\r\n              <Avatar icon=\"user\"/>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderBar\r\n","import React from 'react';\r\nimport {Layout} from 'antd';\r\nimport './style.css';\r\nimport SiderNav from '../Layout/SiderNav';\r\nimport HeaderBar from \"../Layout/HeaderBar\";\r\n// import ContentMain from \"../Layout/ContentMain\";\r\n\r\nconst {Header, Content, Sider, Footer} = Layout;\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed} style={{height: '100vh'}}>\r\n            <SiderNav collapsed={this.state.collapsed}/>\r\n          </Sider>\r\n          <Layout>\r\n            <Header className=\"header\" style={{background: '#fff', padding: 0}}>\r\n              <HeaderBar collapsed={this.state.collapsed} onToggle={this.toggle}/>\r\n            </Header>\r\n            <Content className=\"content\">\r\n              {/*<ContentMain/>*/}\r\n              {/*嵌套子路由：页面展示的内容通过 this.props.children*/}\r\n              {this.props.children}\r\n            </Content>\r\n            <Footer style={{textAlign: 'center'}}>\r\n              My-React ©2019 Created by chengmomo <a target='_blank'\r\n                                                     href='https://github.com/chengmomo/my-react.git'>github地址</a>\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Button, Checkbox, Form, Icon, Input} from \"antd\";\r\nimport { withRouter } from 'react-router-dom';\r\nimport {inject} from 'mobx-react';\r\n\r\n@withRouter @Form.create() @inject('appStore')\r\nclass Login extends React.Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        this.props.appStore.toggleLogin(true, {username: 'zcj'})\r\n        this.props.history.push({pathname: '/home'})\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <Form.Item>\r\n            {\r\n              getFieldDecorator('userName', {\r\n                rules: [{\r\n                  required: true,\r\n                  message: 'Please input your userName!',\r\n                }]\r\n              })(\r\n                <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                       placeholder=\"Username\"/>\r\n              )}\r\n          </Form.Item>\r\n          <Form.Item hasFeedback>\r\n            {\r\n              getFieldDecorator('password', {\r\n                rules: [{\r\n                  required: true,\r\n                  message: 'Please input your password!',\r\n                }]\r\n              })(<Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"/>\r\n              )}\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Login\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: () => <div>load...</div>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent\r\n","const LOGIN_COOKIE_NAME = 'sessionId'\r\n\r\nexport function isAuthenticated () {\r\n  return _getCookie(LOGIN_COOKIE_NAME)\r\n}\r\n\r\nexport function authenticateSuccess (token) {\r\n  _setCookie(LOGIN_COOKIE_NAME, token)\r\n}\r\n\r\nexport function logout () {\r\n  _setCookie(LOGIN_COOKIE_NAME, '', 0)\r\n}\r\n\r\nfunction _getCookie (name) {\r\n  let start, end\r\n  if (document.cookie.length > 0) {\r\n    start = document.cookie.indexOf(name + '=')\r\n    if (start !== -1) {\r\n      start = start + name.length + 1\r\n      end = document.cookie.indexOf(';', start)\r\n      if (end === -1) {\r\n        end = document.cookie.length\r\n      }\r\n      return unescape(document.cookie.substring(start, end))\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction _setCookie (name, value, expire) {\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + expire)\r\n  document.cookie = name + '=' + escape(value) + '; path=/' +\r\n    (expire ? ';expires=' + date.toGMTString() : '')\r\n}\r\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport './App.css';\nimport Index from \"./pages/Layout\";\nimport Login from \"./pages/Login\";\nimport LoadableComponent from './utils/LoadableComponent';\nimport {isAuthenticated} from './utils/Session'\n\nconst Home = LoadableComponent(() => import('./pages/Home'));\nconst TableDemo = LoadableComponent(() => import('./pages/AntCom/TableDemo'));\nconst FormDemo = LoadableComponent(() => import('./pages/AntCom/FormDemo'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Switch>\n          <Route path=\"/login\" component={Login}/>\n          {/*<Route path=\"/\" component={Index}/>*/}\n          <Route path=\"/\" render={() =>\n            <Index>\n              <Switch>\n                {/*<Route exact path='/home' component={Home}/>*/}\n                <Route exact path='/home'\n                       render={() => !!isAuthenticated() ? <Home/> : <Redirect to={{pathname: '/login'}}/>}/>\n                <Route exact path='/home/ant/form' component={FormDemo}/>\n                <Route exact path='/home/ant/table' component={TableDemo}/>\n                {/*<Route exact path='/home/ant/form' component={FormDemo}/>*/}\n                <Redirect exact from='/' to='/home'/>\n              </Switch>\n            </Index>\n          }/>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import appStore from './appStore'\r\nimport home from './home'\r\n\r\nconst store = {\r\n  appStore,\r\n  home\r\n}\r\nexport default store\r\n","import {observable, action} from 'mobx'\r\nimport {isAuthenticated, authenticateSuccess, logout} from '../utils/Session'\r\n\r\nclass AppStore {\r\n  @observable isLogin = !!isAuthenticated() //利用cookie来判断用户是否登录，避免刷新页面后登录状态丢失\r\n  @observable users = []  //模拟用户数据库\r\n  @observable loginUser = {}  //当前登录用户信息\r\n\r\n  @action toggleLogin(flag, info = {}) {\r\n    this.loginUser = info  //设置登录用户信息\r\n    if (flag) {\r\n      authenticateSuccess(info.username)\r\n      this.isLogin = true\r\n    } else {\r\n      logout()\r\n      this.isLogin = false\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AppStore()\r\n","import {observable, action} from 'mobx';\r\n\r\nconst HomeStore = observable({\r\n  title: 'this is home page',\r\n  list: []    // 获取首页数据\r\n});\r\nexport default HomeStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\n\n//打包时，用的HashRouter并加上了basename，因为放在服务器的二级目录下\nReactDOM.render(\n  <HashRouter>\n    <Provider {...store}>\n      <App/>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}