{"version":3,"sources":["pages/Layout/SiderNav/index.js","pages/Layout/HeaderBar/index.js","pages/Layout/index.js","pages/Login/index.js","utils/LoadableComponent.js","utils/Session.js","App.js","serviceWorker.js","store/index.js","store/appStore.js","store/home.js","index.js"],"names":["menus","title","icon","key","subs","SiderNav","withRouter","props","onOpenChange","openKeys","length","latestOpenKey","includes","setState","renderSubMenu","SubMenu","type","map","item","renderMenuItem","Item","to","state","selectedKeys","pathname","this","location","rank","split","console","log","substr","lastIndexOf","slice","join","nextProps","className","onClick","theme","style","borderRight","mode","inlineCollapsed","collapsed","React","Component","HeaderBar","inject","visible","toggle","onToggle","logout","appStore","toggleLogin","history","push","showConfirm","that","confirm","okText","okType","cancelText","onOk","onCancel","showDrawer","onClose","menu","ItemGroup","drawer","placement","isLogin","span","defaultSelectedKeys","lineHeight","borderBottom","overlay","Header","Content","Sider","Footer","Home","trigger","collapsible","height","background","padding","children","textAlign","target","href","Login","create","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","username","validateToUserName","rule","value","callback","user","userName","validateToPassword","password","getFieldDecorator","size","onSubmit","rules","required","message","validator","prefix","color","placeholder","hasFeedback","block","shape","htmlType","LoadableComponent","component","Loadable","loader","loading","LOGIN_COOKIE_NAME","isAuthenticated","name","start","end","document","cookie","indexOf","unescape","substring","_getCookie","authenticateSuccess","token","_setCookie","expire","date","Date","setDate","getDate","escape","toGMTString","TableDemo","FormDemo","PageDemo","HighChartsDemo","App","path","render","exact","from","Boolean","window","hostname","match","store","flag","info","loginUser","observable","action","home","list","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.54ed4e09.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Menu, Icon} from 'antd';\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\nconst menus = [\r\n  {\r\n    title: '首页',\r\n    icon: 'home',\r\n    key: '/home'\r\n  },\r\n  {\r\n    title: 'Ant 基本组件',\r\n    icon: 'user',\r\n    key: '/home/ant',\r\n    subs: [\r\n      {title: 'Form', icon: '', key: '/home/ant/form'},\r\n      {title: 'Table', icon: '', key: '/home/ant/table'},\r\n      {title: 'Page', icon: '', key: '/home/ant/page'}\r\n    ]\r\n  },\r\n  {\r\n    title: '常用插件',\r\n    icon: 'mail',\r\n    key: '/home/components',\r\n    subs: [\r\n      {\r\n        title: '图表',\r\n        icon: 'bar-chart',\r\n        key: '/home/components/submenu',\r\n        subs: [\r\n          {title: 'highcharts', icon: '', key: '/home/components/submenu/highcharts'},\r\n          {title: 'option2', icon: '', key: '/home/components/submenu/option2'},\r\n        ]\r\n      },\r\n      {title: 'option3', icon: '', key: '/home/components/option3'}]\r\n  }]\r\n\r\n//withRouter一定要写在前面，不然路由变化不会反映到props中去\r\n@withRouter\r\nclass SiderNav extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKeys: [],\r\n      openKeys: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // 防止页面刷新侧边栏又初始化了\r\n    const pathname = this.props.location.pathname\r\n    //获取当前所在的目录层级\r\n    const rank = pathname.split('/')\r\n    console.log(rank)\r\n    switch (rank.length) {\r\n      case 2 :  //一级目录\r\n        this.setState({\r\n          selectedKeys: [pathname]\r\n        })\r\n        break;\r\n      case 4 : //二级目录\r\n        this.setState({\r\n          selectedKeys: [pathname],\r\n          openKeys: [pathname.substr(0, pathname.lastIndexOf('/'))]\r\n        })\r\n        break;\r\n      case 5 : //三级目录，要展开两个subMenu\r\n        this.setState({\r\n          selectedKeys: [pathname],\r\n          openKeys: [rank.slice(0, 3).join('/'), rank.slice(0, 4).join('/')]\r\n        })\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    //当点击面包屑导航时，侧边栏要同步响应\r\n    // const {value: oldValue} = this.props;\r\n    const pathname = nextProps.location.pathname\r\n    if (this.props.location.pathname !== pathname) {\r\n      this.setState({\r\n        selectedKeys: [pathname],\r\n      })\r\n    }\r\n  }\r\n\r\n  onOpenChange = (openKeys) => {\r\n    if (openKeys.length === 0 || openKeys.length === 1) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n      return\r\n    }\r\n\r\n    const latestOpenKey = openKeys[openKeys.length - 1]\r\n    //判断最新展开的菜单是不是父级菜单，若是父级菜单就只展开一个，若是子级菜单就展开父级菜单和当前子菜单\r\n    //因为我的子菜单的key包含了父级菜单，所以不用像官网的例子单独定义父级菜单数组，然后比较当前菜单在不在父级菜单数组里面。\r\n    //只适用于3级菜单\r\n    if (latestOpenKey.includes(openKeys[0])) {\r\n      this.setState({\r\n        openKeys\r\n      })\r\n    } else {\r\n      this.setState({\r\n        openKeys: [latestOpenKey]\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {openKeys, selectedKeys} = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"logo\"/>\r\n        <Menu\r\n          onOpenChange={this.onOpenChange}\r\n          onClick={({key}) => this.setState({selectedKeys: [key]})}\r\n          theme=\"dark\"\r\n          selectedKeys={selectedKeys}\r\n          openKeys={openKeys}\r\n          style={{borderRight: 0}}\r\n          mode=\"inline\"\r\n          inlineCollapsed={this.props.collapsed}\r\n        >\r\n          {\r\n            menus && menus.map(item => {\r\n              return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\r\n            })\r\n          }\r\n        </Menu>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  renderSubMenu = ({key, icon, title, subs}) => {\r\n    return (\r\n      <Menu.SubMenu key={key} title={<span> {icon && <Icon type={icon}/>}<span>{title}</span></span>}>\r\n        {\r\n          subs && subs.map(item => {\r\n            return item.subs && item.subs.length > 0 ? this.renderSubMenu(item) : this.renderMenuItem(item)\r\n          })\r\n        }\r\n      </Menu.SubMenu>\r\n    )\r\n  }\r\n\r\n  renderMenuItem = ({key, icon, title,}) => {\r\n    return (\r\n      <Menu.Item key={key}>\r\n        <Link to={key}>\r\n          {icon && <Icon type={icon}/>}\r\n          <span>{title}</span>\r\n        </Link>\r\n      </Menu.Item>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SiderNav\r\n","import React from 'react';\r\nimport {Drawer, Icon, Menu, Avatar, Row, Col, Dropdown, Modal} from 'antd';\r\nimport {inject} from 'mobx-react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport '../style.css'\r\n\r\n@withRouter @inject('appStore')\r\nclass HeaderBar extends React.Component {\r\n  state = {visible: false};\r\n  toggle = () => {\r\n    this.props.onToggle()\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.appStore.toggleLogin(false)\r\n    this.props.history.push(\"/login\")\r\n  }\r\n\r\n  showConfirm = () => {\r\n    let that = this\r\n    Modal.confirm({\r\n      title: '确定退出该应用?',\r\n      // content: 'Some descriptions',\r\n      okText: '确定',\r\n      okType: 'danger',\r\n      cancelText: '取消',\r\n      onOk() {\r\n        that.logout()\r\n      },\r\n      onCancel() {\r\n        // console.log('Cancel');\r\n      },\r\n    });\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {collapsed, appStore} = this.props\r\n    const menu = (\r\n      <Menu className='menu'>\r\n        <Menu.ItemGroup title='用户中心' className='menu-group'>\r\n          <Menu.Item>你好</Menu.Item>\r\n          <Menu.Item>个人信息</Menu.Item>\r\n          <Menu.Item><span onClick={this.showConfirm}>退出登录</span></Menu.Item>\r\n        </Menu.ItemGroup>\r\n        <Menu.ItemGroup title='设置中心' className='menu-group'>\r\n          <Menu.Item><span onClick={this.showDrawer}>设置</span></Menu.Item>\r\n        </Menu.ItemGroup>\r\n      </Menu>\r\n    )\r\n    const drawer = (\r\n      <Drawer\r\n        title=\"Basic Drawer\"\r\n        placement=\"right\"\r\n        onClose={this.onClose}\r\n        visible={this.state.visible}\r\n      >\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n        <p>Some contents...</p>\r\n      </Drawer>\r\n    )\r\n    return (\r\n      <div>\r\n        <Icon\r\n          className=\"trigger\"\r\n          type={collapsed ? 'menu-unfold' : 'menu-fold'}\r\n          onClick={this.toggle}\r\n        />\r\n        <span>isLogin-{appStore.isLogin ? 'TRUE' : 'FALSE'}</span>\r\n        <Row className=\"header-right\">\r\n          <Col span={20}>\r\n            <Menu className=\"top-menu\"\r\n                  mode=\"horizontal\"\r\n                  defaultSelectedKeys={['2']}\r\n                  style={{lineHeight: '62px', borderBottom: 0}}\r\n            >\r\n              <Menu.Item key=\"1\">nav 1</Menu.Item>\r\n              <Menu.Item key=\"2\">nav 2</Menu.Item>\r\n              <Menu.Item key=\"3\">nav 3</Menu.Item>\r\n            </Menu>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Dropdown overlay={menu}>\r\n              <Avatar icon=\"user\"/>\r\n            </Dropdown>\r\n          </Col>\r\n        </Row>\r\n        {drawer}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HeaderBar\r\n","import React from 'react';\r\nimport {Layout} from 'antd';\r\nimport './style.css';\r\nimport SiderNav from '../Layout/SiderNav';\r\nimport HeaderBar from \"../Layout/HeaderBar\";\r\n// import ContentMain from \"../Layout/ContentMain\";\r\n\r\nconst {Header, Content, Sider, Footer} = Layout;\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      collapsed: false\r\n    }\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Layout>\r\n          <Sider trigger={null} collapsible collapsed={this.state.collapsed} style={{height: '100vh'}}>\r\n            <SiderNav collapsed={this.state.collapsed}/>\r\n          </Sider>\r\n          <Layout>\r\n            <Header className=\"header\" style={{background: '#fff', padding: 0}}>\r\n              <HeaderBar collapsed={this.state.collapsed} onToggle={this.toggle}/>\r\n            </Header>\r\n            <Content className=\"content\">\r\n              {/*<ContentMain/>*/}\r\n              {/*嵌套子路由：页面展示的内容通过 this.props.children*/}\r\n              {this.props.children}\r\n            </Content>\r\n            <Footer style={{textAlign: 'center'}}>\r\n              My-React ©2019 Created by chengmomo <a target='_blank'\r\n                                                     href='https://github.com/chengmomo/my-react.git'>github地址</a>\r\n            </Footer>\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport {Button, Card, Avatar, Form, Icon, Input} from \"antd\";\r\nimport {withRouter} from 'react-router-dom';\r\nimport {inject} from 'mobx-react';\r\nimport './style.css'\r\n\r\n@withRouter @Form.create() @inject('appStore')\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: {\r\n        userName: 'admin',\r\n        password: 'admin'\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n        this.props.appStore.toggleLogin(true, {username: 'zcj'})\r\n        this.props.history.push({pathname: '/home'})\r\n      }\r\n    });\r\n  };\r\n\r\n  validateToUserName = (rule, value, callback) => {\r\n    if (value && value !== this.state.user.userName) {\r\n      callback('账号错误');\r\n    } else {\r\n      callback()\r\n    }\r\n  };\r\n\r\n  validateToPassword = (rule, value, callback) => {\r\n    if (value && value !== this.state.user.password) {\r\n      callback('密码错误');\r\n    } else {\r\n      callback()\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <div className=\"login-wrapper\">\r\n        <Card className=\"login-card\">\r\n          <Avatar className=\"login-avatar\" size={60} icon=\"user\"/>\r\n          <h3>Hello</h3>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Form.Item>\r\n              {\r\n                getFieldDecorator('userName', {\r\n                  rules: [{\r\n                    required: true,\r\n                    message: 'Please input your userName!',\r\n                  }, {\r\n                    validator: this.validateToUserName,\r\n                  }]\r\n                })(\r\n                  <Input prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                         placeholder=\"Username\"/>\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item hasFeedback>\r\n              {\r\n                getFieldDecorator('password', {\r\n                  rules: [{\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                  }, {\r\n                    validator: this.validateToPassword,\r\n                  }]\r\n                })(<Input prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"/>\r\n                )}\r\n            </Form.Item>\r\n            <Form.Item style={{textAlign: 'right'}}>\r\n              <a className=\"login-form-forgot\" href=\"#\">\r\n                忘记密码\r\n              </a>\r\n              <Button type=\"link\" size='small'>\r\n                立即注册\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <div className=\"login-tip\">管理员账号：admin/admin</div>\r\n              <Button type=\"primary\" block shape=\"round\" htmlType=\"submit\">\r\n                登录\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react'\r\nimport Loadable from 'react-loadable'\r\n\r\nconst LoadableComponent = (component) => {\r\n  return Loadable({\r\n    loader: component,\r\n    loading: () => <div>load...</div>\r\n  })\r\n}\r\n\r\nexport default LoadableComponent\r\n","const LOGIN_COOKIE_NAME = 'sessionId'\r\n\r\nexport function isAuthenticated () {\r\n  return _getCookie(LOGIN_COOKIE_NAME)\r\n}\r\n\r\nexport function authenticateSuccess (token) {\r\n  _setCookie(LOGIN_COOKIE_NAME, token)\r\n}\r\n\r\nexport function logout () {\r\n  _setCookie(LOGIN_COOKIE_NAME, '', 0)\r\n}\r\n\r\nfunction _getCookie (name) {\r\n  let start, end\r\n  if (document.cookie.length > 0) {\r\n    start = document.cookie.indexOf(name + '=')\r\n    if (start !== -1) {\r\n      start = start + name.length + 1\r\n      end = document.cookie.indexOf(';', start)\r\n      if (end === -1) {\r\n        end = document.cookie.length\r\n      }\r\n      return unescape(document.cookie.substring(start, end))\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nfunction _setCookie (name, value, expire) {\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + expire)\r\n  document.cookie = name + '=' + escape(value) + '; path=/' +\r\n    (expire ? ';expires=' + date.toGMTString() : '')\r\n}\r\n","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom';\nimport './App.css';\nimport Index from \"./pages/Layout\";\nimport Login from \"./pages/Login\";\nimport LoadableComponent from './utils/LoadableComponent';\nimport {isAuthenticated} from './utils/Session'\n\nconst Home = LoadableComponent(() => import('./pages/Home'));\nconst TableDemo = LoadableComponent(() => import('./pages/AntCom/TableDemo'));\nconst FormDemo = LoadableComponent(() => import('./pages/AntCom/FormDemo'));\nconst PageDemo = LoadableComponent(() => import('./pages/AntCom/PageDemo'));\nconst HighChartsDemo = LoadableComponent(() => import('./pages/Charts/HighChartsDemo'));\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/login\" component={Login}/>\n        {/*<Route path=\"/\" component={Index}/>*/}\n        <Route path=\"/\" render={() =>\n          <Index>\n            <Switch>\n              {/*<Route exact path='/home' component={Home}/>*/}\n              <Route exact path='/home'\n                     render={() => !!isAuthenticated() ? <Home/> : <Redirect to={{pathname: '/login'}}/>}/>\n              <Route exact path='/home/ant/form' component={FormDemo}/>\n              <Route exact path='/home/ant/table' component={TableDemo}/>\n              <Route exact path='/home/ant/page' component={PageDemo}/>\n              <Route exact path='/home/components/submenu/highcharts' component={HighChartsDemo}/>\n              <Redirect exact from='/' to='/home'/>\n            </Switch>\n          </Index>\n        }/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import appStore from './appStore'\r\nimport home from './home'\r\n\r\nconst store = {\r\n  appStore,\r\n  home\r\n}\r\nexport default store\r\n","import {observable, action} from 'mobx'\r\nimport {isAuthenticated, authenticateSuccess, logout} from '../utils/Session'\r\n\r\nclass AppStore {\r\n  @observable isLogin = !!isAuthenticated() //利用cookie来判断用户是否登录，避免刷新页面后登录状态丢失\r\n  @observable users = []  //模拟用户数据库\r\n  @observable loginUser = {}  //当前登录用户信息\r\n\r\n  @action toggleLogin(flag, info = {}) {\r\n    this.loginUser = info  //设置登录用户信息\r\n    if (flag) {\r\n      authenticateSuccess(info.username)\r\n      this.isLogin = true\r\n    } else {\r\n      logout()\r\n      this.isLogin = false\r\n    }\r\n  }\r\n}\r\n\r\nexport default new AppStore()\r\n","import {observable, action} from 'mobx';\r\n\r\nconst HomeStore = observable({\r\n  title: 'this is home page',\r\n  list: []    // 获取首页数据\r\n});\r\nexport default HomeStore;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter, HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\n\n//打包时，用HashRouter并加上了basename，因为放在服务器的二级目录下\nReactDOM.render(\n  <HashRouter>\n    <Provider {...store}>\n      <App/>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}