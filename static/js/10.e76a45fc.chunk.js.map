{"version":3,"sources":["components/CustomBreadcrumb/index.js","components/LineWrap/index.js","pages/AntCom/TableDemo/index.js"],"names":["CustomBreadcrumb","props","style","marginBottom","Item","to","arr","map","item","key","title","LineWrap","this","lineClampNum","placement","className","WebkitLineClamp","PureComponent","dataSource","name","age","address","other","columns","dataIndex","width","render","text","record","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","disabled","TableDemo","bordered","React","Component"],"mappings":"sKAgBeA,IAZU,SAACC,GAAD,OACvB,uBAAYC,MAAO,CAACC,aAAc,KAChC,sBAAYC,KAAZ,KAAiB,kBAAC,IAAD,CAAMC,GAAG,SAAT,iBAChBJ,EAAMK,KAAOL,EAAMK,IAAIC,IAAI,SAAAC,GAC1B,MAAsB,kBAAVA,EACH,sBAAYJ,KAAZ,CAAiBK,IAAKD,EAAKE,OAAO,kBAAC,IAAD,CAAML,GAAIG,EAAKH,IAAKG,EAAKE,QAE3D,sBAAYN,KAAZ,CAAiBK,IAAKD,GAAOA,Q,yMCHvBG,G,wLAMT,IAAD,EACuBC,KAAKX,MAA5BS,EADA,EACAA,MAAOG,EADP,EACOA,aACd,OACE,uBAASC,UAAU,UAAUJ,MAAOA,GAClC,0BAAMK,UAAU,eAAeb,MAAO,CAACc,gBAAiBH,IAAgBH,Q,GAV1CO,kB,SCHhCC,EAAa,CAAC,CAClBT,IAAK,IACLU,KAAM,qBACNC,IAAK,GACLC,QAAS,oDACTC,MAAO,qDACN,CACDb,IAAK,IACLU,KAAM,qBACNC,IAAK,GACLC,QAAS,oLACTC,MAAO,gHAGHC,EAAU,CAAC,CACfb,MAAO,eACPc,UAAW,OACXf,IAAK,QACJ,CACDC,MAAO,eACPc,UAAW,MACXf,IAAK,OACJ,CACDC,MAAO,eACPc,UAAW,UACXf,IAAK,UACLgB,MAAO,MACPC,OAAQ,SAACC,EAAMC,GACb,OAAO,kBAAC,EAAD,CAAUlB,MAAOiB,EAAMd,aAAc,MAE7C,CACDH,MAAO,eACPc,UAAW,QACXf,IAAK,QACLgB,MAAO,QAGHI,EAAe,CACnBC,SAAU,SAACC,EAAiBC,GAC1BC,QAAQC,IAAR,2BAAgCH,GAAmB,iBAAkBC,IAEvEG,iBAAkB,SAAAP,GAAM,MAAK,CAC3BQ,SAAyB,kBAAfR,EAAOnB,IACjBU,KAAMS,EAAOnB,OAIX4B,E,iLAEF,OACE,6BACE,kBAACrC,EAAA,EAAD,CAAkBM,IAAK,CAAC,MAAO,WAC/B,uBAAMI,MAAM,uCAAS4B,UAAU,EAAOpC,MAAO,CAACC,aAAc,KAC1D,uBAAO0B,aAAcA,EAAcX,WAAYA,EAAYK,QAASA,U,GANtDgB,IAAMC,WAafH","file":"static/js/10.e76a45fc.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Breadcrumb} from 'antd'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst CustomBreadcrumb = (props) => (\r\n  <Breadcrumb style={{marginBottom: 16}}>\r\n    <Breadcrumb.Item><Link to='/home'>首页</Link></Breadcrumb.Item>\r\n    {props.arr && props.arr.map(item => {\r\n      if ((typeof item) === 'object') {\r\n        return <Breadcrumb.Item key={item.title}><Link to={item.to}>{item.title}</Link></Breadcrumb.Item>\r\n      } else {\r\n        return <Breadcrumb.Item key={item}>{item}</Breadcrumb.Item>\r\n      }\r\n    })}\r\n  </Breadcrumb>\r\n)\r\nexport default CustomBreadcrumb\r\n","/**\r\n * table td 溢出隐藏 组件\r\n */\r\nimport React, {PureComponent} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Tooltip} from 'antd';\r\nimport './index.css';\r\n\r\nexport default class LineWrap extends PureComponent {\r\n  static propTypes = {\r\n    title: PropTypes.string,\r\n    lineClampNum: PropTypes.number,\r\n  };\r\n\r\n  render() {\r\n    const {title, lineClampNum} = this.props;\r\n    return (\r\n      <Tooltip placement=\"topLeft\" title={title}>\r\n        <span className=\"lineEllipsis\" style={{WebkitLineClamp: lineClampNum}}>{title}</span>\r\n      </Tooltip>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport {Card, Table} from 'antd';\r\nimport LineWrap from '../../../components/LineWrap';\r\nimport CustomBreadcrumb from \"../../../components/CustomBreadcrumb\";\r\n\r\nconst dataSource = [{\r\n  key: '1',\r\n  name: '胡彦斌',\r\n  age: 32,\r\n  address: '西湖区湖底公园1号',\r\n  other: '西湖区湖底公园1号'\r\n}, {\r\n  key: '2',\r\n  name: '胡彦祖',\r\n  age: 42,\r\n  address: '西湖区湖底公园1号西湖区湖底公园1号222222222222ssssssssssssssssssss22222222222222222ssssssssssssssssssssssssssssss',\r\n  other: '胡彦祖胡彦祖西湖区湖底公园1号222222222222222xs22sss'\r\n}];\r\n\r\nconst columns = [{\r\n  title: '姓名',\r\n  dataIndex: 'name',\r\n  key: 'name',\r\n}, {\r\n  title: '年龄',\r\n  dataIndex: 'age',\r\n  key: 'age',\r\n}, {\r\n  title: '住址',\r\n  dataIndex: 'address',\r\n  key: 'address',\r\n  width: '35%',\r\n  render: (text, record) => {\r\n    return <LineWrap title={text} lineClampNum={1}/>\r\n  }\r\n}, {\r\n  title: '备注',\r\n  dataIndex: 'other',\r\n  key: 'other',\r\n  width: '20%',\r\n}];\r\n\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: record => ({\r\n    disabled: record.key === 'Disabled User', // Column configuration not to be checked\r\n    name: record.key,\r\n  }),\r\n};\r\n\r\nclass TableDemo extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <CustomBreadcrumb arr={['ant', 'table']}/>\r\n        <Card title=\"可显示省略号\" bordered={false} style={{marginBottom: 20}}>\r\n          <Table rowSelection={rowSelection} dataSource={dataSource} columns={columns}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TableDemo\r\n"],"sourceRoot":""}